import random
import os
import vk_api
from vk_api.utils import get_random_id
from datetime import datetime, date
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType

vk_session = vk_api.VkApi(token='828d15350ed7aabdb944a2defc9f780bc8b0ed16ddaf94f97e2a79574e953cbeb586c460709098852f6fd')
longpoll = VkBotLongPoll(vk_session, '200850856')
vk = vk_session.get_api()

subjects = ["subjs/web", "subjs/linux", "subjs/primat", "subjs/uml", "subjs/ml"]
subj_dict = {"–≤–µ–±": 0, "web": 0, "–ª–∏–Ω—É–∫—Å": 1, "linux": 1, "–ø—Ä–∏–º–∞—Ç": 2, "uml": 3, "—é–º–ª": 3, "ml": 4, "–º–ª": 4}
namesofsubjs = ["–≤–µ–±", "–ª–∏–Ω—É–∫—Å", "–ø—Ä–∏–º–∞—Ç", "—é–º–ª", "–º–ª"]
slovechki = {'!—Å–ø–∞—Å–∏–±–æ': '–ø–æ–∂–∞–ª—É—Å—Ç–∞!!!!!!!!!!!!',
             '!–ø—Ä–æ—Å—Ç–∏': '–ø–æ—Å–æ—Å–∏',
             '–º–æ–π.': '—Ñ–∞–∫—Ç!',
             '–Ω–∞—à.': '–Ω–∞—à –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ!',
             '–Ω–∞—à)': '–Ω–∞—à –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ!',
             '–º–æ–π)': '—Ñ–∞–∫—Ç!',
             '!–∫–æ–ª—è': '1–°+++++ –º–æ–Ω—Å—Ç—Ä—Ä—Ä',
             '!–æ—Ç—á–∏—Å–ª–∏—Ç—å –¥–∏–º—É': '–¥–∏–º –¥–∏–º–æ–≤–∏—á –¥–∏–º—ã—á –æ—Ç—á–∏—Å–ª–µ–Ω —Å –ø–æ–∑–æ—Ä–æ–ºüò§',
             '!—Å–∞–π—Ç': 'https://usachova.github.io/ITMO-WEB/'}


def read_list_from_file(filename):
    list1, list2 = [], []
    f = open(filename + '.txt', 'r')
    is_first_part = True
    for line in f:
        if line == "...\n":
            is_first_part = False
            continue
        if is_first_part:
            list1.append(line)
        else:
            list2.append(line)
    f.close()
    return list1, list2


def update_file(filename, list1, list2):
    f = open(filename + '.txt', 'w')
    for line in list1:
        f.write(line)
    f.write("...\n")
    for line in list2:
        f.write(line)
    f.close()


def write_queue(list1, list2, s):
    for line in enumerate(list1):
        s += str(line[0] + 1) + '. ' + line[1]
    if list2:
        s += '...\n'
        for line in enumerate(list2):
            s += 'n-' + str(len(list2) - line[0] - 1) + '. ' + line[1]
    return s


def get_name():
    user_get = vk.users.get(user_ids=str(event.object.from_id))
    full_name = user_get[0]['first_name'] + " " + user_get[0]['last_name']
    return full_name


def check_words(msg):
    words = ['!–æ—á–∏—Å—Ç–∏—Ç—å', '!–∑–∞–ø–∏—Å—å', '!—É–¥–∞–ª–∏—Ç—å—Å—è', '!–æ—á–µ—Ä–µ–¥—å ', '!–¥–∏–º–∞', '!—Ç–µ–π–ª–æ—Ä', '!–∫–æ–º–∞–Ω–¥—ã']
    tests_commands = ['!!–æ—á–∏—Å—Ç–∏—Ç—å–≤—Å—ë', '!!—Å–º–æ—Ç—Ä–µ—Ç—å–≤—Å—ë']
    words += tests_commands
    words += slovechki.keys()
    for word in words:
        if word in msg:
            return True
    return False


for event in longpoll.listen():
    if event.type == VkBotEventType.MESSAGE_NEW:
        text = event.object['text'].lower()
        if check_words(text) and event.from_chat:
            mes = '—á–µ–≤–æ'

            if '!–∑–∞–ø–∏—Å—å' in text:
                to_first_list = True
                l = text.split()[1:]
                if l and l[0] == '–ø–æ—Å–ª–µ–¥–Ω–∏–º':
                    l = l[1:]
                    to_first_list = False

                if l and l[0] in subj_dict:
                    number = subj_dict[l[0]]

                    listFirstPart, listSecondPart = read_list_from_file(subjects[number])

                    if listFirstPart.count(get_name() + '\n') or listSecondPart.count(get_name() + '\n'):
                        mes = '–≤—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ ' + namesofsubjs[number] + ' !'
                    else:
                        if to_first_list:
                            listFirstPart.append(get_name() + '\n')
                            mes = '–≤—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ ' + namesofsubjs[number]
                        else:
                            listSecondPart.reverse()
                            listSecondPart.append(get_name() + '\n')
                            listSecondPart.reverse()
                            mes = '–≤—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ ' + namesofsubjs[number] + ' –ø–æ—Å–ª–µ–¥–Ω–∏–º'

                    update_file(subjects[number], listFirstPart, listSecondPart)

            if '!–æ—á–µ—Ä–µ–¥—å' in text:
                l = text.split()[1:]
                if l and l[0] in subj_dict:
                    number = subj_dict[l[0]]
                    listFirstPart, listSecondPart = read_list_from_file(subjects[number])
                    mes = '–ø–æ–∂–∏–ª–∞—è –æ—á–µ—Ä–µ–¥—å –Ω–∞ ' + namesofsubjs[number] + ':\n'
                    mes = write_queue(listFirstPart, listSecondPart, mes)

            if '!–æ—á–∏—Å—Ç–∏—Ç—å' in text:
                l = text.split()[1:]
                if l and l[0] in subj_dict:
                    number = subj_dict[l[0]]
                    listFirstPart, listSecondPart = read_list_from_file(subjects[number])
                    listFirstPart.clear()
                    listSecondPart.clear()
                    mes = '–æ—á–µ—Ä–µ–¥—å –Ω–∞ ' + namesofsubjs[number] + ' –æ—á–∏—â–µ–Ω–∞'
                    update_file(subjects[number], listFirstPart, listSecondPart)

            if '!—É–¥–∞–ª–∏—Ç—å—Å—è' in text:
                l = text.split()[1:]
                if l and l[0] in subj_dict:
                    number = subj_dict[l[0]]
                    listFirstPart, listSecondPart = read_list_from_file(subjects[number])
                    if listFirstPart.count(get_name() + '\n'):
                        listFirstPart.remove(get_name() + '\n')
                    if listSecondPart.count(get_name() + '\n'):
                        listSecondPart.remove(get_name() + '\n')
                    mes = '–≤—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ ' + namesofsubjs[number]
                    update_file(subjects[number], listFirstPart, listSecondPart)

            if '!–¥–∏–º–∞' in text:
                l = text.split()[1:]
                if l:
                    if l[0] == '–Ω–µ':
                        f = open('prikol/dima.txt', 'r')
                        last_date_str = f.readline()
                        last_date = [int(x) for x in last_date_str.rstrip().split('-')]
                        record = int(f.readline().rstrip().split(" ")[1])
                        cnt = datetime.today().date() - date(last_date[0], last_date[1], last_date[2])
                        mes = '–æ–ø—è—Ç—å?..üò¢ \n –¥–Ω–µ–π –±–µ–∑ –¥–∏–º—ã –≤ –≤—É–∑–µ: ' + str(cnt.days).split()[0] + '..üòµ'
                        f.close()
                        if int(cnt.days) > record:
                            f = open('prikol/dima.txt', 'w')
                            f.write(last_date_str + '—Ä–µ–∫–æ—Ä–¥: ' + str(cnt.days))
                            f.close()
                    elif l[0] == '–ø—Ä–∏—à—ë–ª':
                        f = open('prikol/dima.txt', 'r')
                        last_date = f.readline().rstrip()
                        record = f.readline()
                        f.close()
                        f = open('prikol/dima.txt', 'w')
                        f.write(str(datetime.today().date()) + '\n' + record)
                        mes = '–≤–æ –¥–µ–ª–∞üò≥ü§Ø \n –¥–Ω–µ–π –±–µ–∑ –¥–∏–º—ã –≤ –≤—É–∑–µ: 0'
                        f.close()
                    elif l[0] == '—Ä–µ–∫–æ—Ä–¥':
                        f = open('prikol/dima.txt', 'r')
                        last_date = f.readline().rstrip()
                        record = f.readline().rstrip().split(" ")[1]
                        mes = '—Ä–µ–∫–æ—Ä–¥ –¥–Ω–µ–π –±–µ–∑ –¥–∏–º—ã –≤ –≤—É–∑–µ: ' + record + '..üò§'
                        f.close()
                else:
                    mes = '–∫–ª–æ—É–Ω'

            for slov in slovechki:
                if slov in text:
                    mes = slovechki[slov]

            if '!—Ç–µ–π–ª–æ—Ä' in text:
                dir_name = 'taylor/'
                taylor_list = os.listdir(dir_name)
                upload = vk_api.VkUpload(vk)
                photo = upload.photo_messages(dir_name + taylor_list[random.randint(0, len(taylor_list) - 1)])
                owner_id = photo[0]['owner_id']
                photo_id = photo[0]['id']
                access_key = photo[0]['access_key']
                attachment = f'photo{owner_id}_{photo_id}_{access_key}'
                vk.messages.send(
                    key=('0578ac1069eec95d993b7d9b479e82d61829fa26'),
                    server=('https://lp.vk.com/wh200850856'),
                    ts=('1'),
                    random_id=get_random_id(),
                    message="",
                    attachment=attachment,
                    chat_id=event.chat_id
                )
                continue

            if '!!–æ—á–∏—Å—Ç–∏—Ç—å–≤—Å—ë' in text:
                mes = ''
                for subj in subjects:
                    listFirstPart, listSecondPart = read_list_from_file(subj)
                    listFirstPart.clear()
                    listSecondPart.clear()
                    mes += '–æ—á–µ—Ä–µ–¥—å –Ω–∞ ' + subj + ' –æ—á–∏—â–µ–Ω–∞\n'
                    update_file(subj, listFirstPart, listSecondPart)

            if '!!—Å–º–æ—Ç—Ä–µ—Ç—å–≤—Å—ë' in text:
                mes = ''
                for subj in subjects:
                    listFirstPart, listSecondPart = read_list_from_file(subj)
                    mes += '–ø–æ–∂–∏–ª–∞—è –æ—á–µ—Ä–µ–¥—å –Ω–∞ ' + subj + ':\n'
                    mes = write_queue(listFirstPart, listSecondPart, mes)

            if '!–∫–æ–º–∞–Ω–¥—ã' in text:
                f = open('text_files/commands.txt', 'r')
                mes = ''.join(f.readlines())
                f.close()

            vk.messages.send(
                key=('0578ac1069eec95d993b7d9b479e82d61829fa26'),
                server=('https://lp.vk.com/wh200850856'),
                ts=('1'),
                random_id=get_random_id(),
                message=mes,
                chat_id=event.chat_id
            )


# Automatically launch when terminating (for Heroku)
def thread_function():
    while True:
        try:
            time.sleep(1200)
        except:
            pass


if __name__ == "__main__":
    x1 = threading.Thread(target=thread_function, args=())
    x1.start()
